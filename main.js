!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}e.d({},{ME:function(){return Pe},PN:function(){return ke},BO:function(){return Ee},LU:function(){return Ce},LJ:function(){return je},fO:function(){return Oe},$R:function(){return Se},eD:function(){return _e}});var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._closePopup=this._popup.querySelector(".button-close-popup"),this._handleEscClose=this._handleEscClose.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(e){var t=this;this._popup.classList.add("popup_closing"),setTimeout((function(){t._popup.classList.remove("popup_closing"),t._popup.classList.remove("popup_opened")}),200),e.preventDefault(),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close(e)}},{key:"renderLoading",value:function(e){var t=this._popup.querySelector(".loading-button-text"),n=this._popup.querySelector(".loading-container");e?(t.classList.add("loading-closed"),n.classList.add("loading-opened")):(n.classList.remove("loading-opened"),t.classList.remove("loading-closed"))}},{key:"setEventListeners",value:function(){var e=this;this._closePopup.addEventListener("click",(function(t){e.close(t)})),this._popup.addEventListener("click",(function(t){"rgba(0, 0, 0, 0.5)"===window.getComputedStyle(t.target).backgroundColor&&e.close(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),o=document.querySelector(".profile__button-info"),i=document.querySelector(".edit"),u=document.querySelector(".edit__button-save"),c=document.querySelector(".edit__input-name"),l=document.querySelector(".edit__input-about"),a=document.querySelector(".profile__info-name"),s=document.querySelector(".profile__info-discription"),f=document.querySelector(".profile__button-include"),p=document.querySelector(".include"),y=document.querySelector(".gallery"),d=document.querySelector(".include__button-save"),v=(document.querySelector(".place"),document.querySelector(".place__button-delete"),document.querySelector(".screen")),b=document.querySelector(".screen__image-dynamics"),h=document.querySelector(".screen__popup-title"),m=document.querySelector(".profile__button-edit-image"),_=document.querySelector(".photograph__input-link"),g=document.querySelector(".photograph__button-save"),S=document.querySelector(".photograph"),w=document.querySelector(".include__input-title"),k=document.querySelector(".include__input-link"),O=document.querySelector(".delete"),E=(document.querySelector(".delete__button-save"),document.querySelector(".place__button-delete"),{_id:"f382bd8051d8e7242391b643",name:"Maikon Corrêa",about:"Estudant, Developer",avatar:"https://avatars.githubusercontent.com/u/121962633?u=8f6b79ed0efe033e91fa7d97adf7f41332ebc57f&v=4",cohort:"web_ptbr_05"}),P={inputErrorClass:"span__error",editButtonSave:".edit__button-save",includeButtonSave:".include__button-save",photographButtonSave:".photograph__button-save",inactiveButtonSaveClass:"edit__button-save_disabled",inactiveButtonIncludeClass:"include__button-save_disabled",inactiveButtonPhotographClass:"photograph__button-save_disabled"};function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==j(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===j(o)?o:String(o)),r)}var o}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e)).setEventListeners(),t}return t=u,(n=[{key:"open",value:function(){L(T(u.prototype),"open",this).call(this),_.value=""}},{key:"close",value:function(e){L(T(u.prototype),"close",this).call(this,e),_e()}},{key:"_handleEscClose",value:function(e){L(T(u.prototype),"_handleEscClose",this).call(this,e)}},{key:"renderLoading",value:function(e){L(T(u.prototype),"renderLoading",this).call(this,e)}},{key:"setEventListeners",value:function(){var e=this;L(T(u.prototype),"setEventListeners",this).call(this),m.addEventListener("click",(function(){e.open()})),g.addEventListener("click",(function(t){t.preventDefault(),je(),setTimeout((function(){e.close(t)}),1e3)}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(r);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}var x=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputErrorClass=t.inputErrorClass,this._editButtonSave=t.editButtonSave,this._includeButtonSave=t.includeButtonSave,this._photographButtonSave=t.photographButtonSave,this._inactiveButtonSaveClass=t.inactiveButtonSaveClass,this._inactiveButtonIncludeClass=t.inactiveButtonIncludeClass,this._inactiveButtonPhotographClass=t.inactiveButtonPhotographClass,this.enableValidation()}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){for(var e=this,t=Array.from(document.forms),n=function(){var t=o[r],n=Array.from(t.elements);n.forEach((function(t){var r;(r=t).addEventListener("input",(function(t){var n=t.target,o=document.querySelector(".span_".concat(n.name,"-message"));n.validity.valid?(r.classList.remove(e.inputErrorClass),o.textContent="",e.isValidForm&&e.enableButtons):(r.classList.add(e.inputErrorClass),"url"===n.type&&""!==n.value.trim()?o.textContent="Por favor, insira um endereço web.":o.textContent=n.validationMessage,e.disableButtons)})),t.addEventListener("input",(function(t){var r,o,i;n.every((function(e){return e.validity.valid}))?(r=document.querySelector(e._editButtonSave),o=document.querySelector(e._includeButtonSave),i=document.querySelector(e._photographButtonSave),r.removeAttribute("disabled"),o.removeAttribute("disabled"),i.removeAttribute("disabled"),r.classList.remove(e._inactiveButtonSaveClass),o.classList.remove(e._inactiveButtonIncludeClass),i.classList.remove(e._inactiveButtonPhotographClass)):function(){var t=document.querySelector(e._editButtonSave),n=document.querySelector(e._includeButtonSave),r=document.querySelector(e._photographButtonSave);t.setAttribute("disabled",!0),n.setAttribute("disabled",!0),r.setAttribute("disabled",!0),t.classList.add(e._inactiveButtonSaveClass),n.classList.add(e._inactiveButtonIncludeClass),r.classList.add(e._inactiveButtonPhotographClass)}()}))}))},r=0,o=t;r<o.length;r++)n()}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var U=function(){function e(t){var n=t.item,r=t.templateSelector,o=t.deleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._templateSelector=r,this._like=n.likes,this._id=n._id,this._title=n.name,this._url=n.link,this._owner=n.owner,this.deleteCard=o}var t,n;return t=e,(n=[{key:"getTemplate",value:function(){return document.querySelector("#gallery__card").content.querySelector(".place").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this.getTemplate(),this._element.setAttribute("id",this._id),this._element.setAttribute("owner._id",this._owner._id),this._element.querySelector(".place__image").setAttribute("src",this._url),this._element.querySelector(".place__image").setAttribute("alt",this._title),this._element.querySelector(".place__title").textContent=this._title,this._element.querySelector(".place__like-number").textContent=this._like.length.toString(),this._buttonLikeElement=this._element.querySelector(".place__button-like"),this._buttonDeleteCard=this._element.querySelector(".place__button-delete"),this._owner._id===E._id?this._buttonDeleteCard.style.display="block":this._buttonDeleteCard.style.display="none",this.setEventListeners(),this._element}},{key:"likeCounter",value:function(e){var t=this._buttonLikeElement.closest(".place").querySelector(".place__like-number");this._buttonLikeElement.classList.toggle("place__button-like_active")?(Pe(this._id),t.textContent=parseInt(t.textContent)+1):(Ee(this._id),t.textContent=parseInt(t.textContent)-1)}},{key:"openPopupConfirmDelete",value:function(){popupDelete.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"removeCard",value:function(){this.deleteCard(this._id)}},{key:"setEventListeners",value:function(){var e=this;this._buttonLikeElement.addEventListener("click",(function(t){e.likeCounter(t)})),this._buttonDeleteCard.addEventListener("click",(function(t){e.removeCard()}))}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==N(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===N(o)?o:String(o)),r)}var o}var M=function(){function e(t,n){var r=t.items,o=t.render;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._render=o,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderer",value:function(){var e=this;this.clear(),this._items.forEach((function(t){e._render(t)}))}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==H(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===H(o)?o:String(o)),r)}var o}function F(){return F="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=z(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},F.apply(this,arguments)}function G(e,t){return G=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},G(e,t)}function W(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function z(e){return z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},z(e)}var $=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&G(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=z(r);if(o){var n=z(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===H(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return W(e)}(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._submitCallback=e,n._getInputValues=n._getInputValues.bind(W(n)),n._container=document.querySelector(".gallery"),n.setEventListeners(),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this._popup.querySelectorAll(".input"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"open",value:function(){F(z(u.prototype),"open",this).call(this),d.setAttribute("disabled",!0),d.classList.add("include__button-save_disabled"),this._popup.reset()}},{key:"renderLoading",value:function(e){F(z(u.prototype),"renderLoading",this).call(this,e)}},{key:"setEventListeners",value:function(){var e=this;F(z(u.prototype),"setEventListeners",this).call(this),f.addEventListener("click",(function(){e.open()})),d.addEventListener("click",(function(t){t.preventDefault(),setTimeout(Se,700),setTimeout(Oe,710);var n=e._getInputValues();e._submitCallback(n),setTimeout((function(){e.close(t)}),1e3)}))}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(r);function K(e){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},K(e)}function Q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==K(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==K(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===K(o)?o:String(o)),r)}var o}function X(e,t){return X=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},X(e,t)}function Y(e){return Y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Y(e)}var Z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&X(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Y(r);if(o){var n=Y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===K(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e)).url=null,t.title=null,t._container=document.querySelector(".screen"),t._closePopup=t._popup.querySelector(".button-close-popup"),t.setEventListeners(),t}return t=u,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"open",value:function(){this._popup.classList.add("screen__image_opened"),document.addEventListener("keydown",this._handleEscClose),b.src=this._url,b.alt=this._title,h.textContent=this._title}},{key:"close",value:function(e){var t=this;this._popup.classList.add("screen__image_closing"),setTimeout((function(){t._popup.classList.remove("screen__image_closing"),t._popup.classList.remove("screen__image_opened")}),200),e.preventDefault(),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;y.addEventListener("click",(function(t){if(t.target.classList.contains("place__image")){var n=t.target.src;e._url=n;var r=t.target.closest(".place").querySelector(".place__title");e._title=r.textContent,e.open()}})),this._closePopup.addEventListener("click",(function(t){e.close(t)})),this._popup.addEventListener("click",(function(t){"rgba(0, 0, 0, 0.5)"===window.getComputedStyle(t.target).backgroundColor&&e.close(t)}))}}])&&Q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(r);function ee(e){return ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ee(e)}function te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==ee(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==ee(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===ee(o)?o:String(o)),r)}var o}function ne(){return ne="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=oe(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},ne.apply(this,arguments)}function re(e,t){return re=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},re(e,t)}function oe(e){return oe=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},oe(e)}var ie=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&re(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=oe(r);if(o){var n=oe(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===ee(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e)).idItem=null,t.setEventListeners(),t}return t=u,(n=[{key:"open",value:function(){ne(oe(u.prototype),"open",this).call(this)}},{key:"close",value:function(e){ne(oe(u.prototype),"close",this).call(this,e)}},{key:"_handleEscClose",value:function(e){ne(oe(u.prototype),"_handleEscClose",this).call(this,e)}},{key:"renderLoading",value:function(e){ne(oe(u.prototype),"renderLoading",this).call(this,e)}},{key:"openConfirmDeleteCard",value:function(e){var t=this;this.open(),this.idItem=e;var n=document.getElementById("delete-button");n.addEventListener("click",(function e(r){ke(t.idItem),r.preventDefault(),setTimeout((function(){t.close(r)}),1e3),n.removeEventListener("click",e),t.idItem=null}))}},{key:"setEventListeners",value:function(){ne(oe(u.prototype),"setEventListeners",this).call(this)}}])&&te(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(r);function ue(e){return ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ue(e)}function ce(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==ue(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==ue(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===ue(o)?o:String(o)),r)}var o}function le(){return le="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=se(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},le.apply(this,arguments)}function ae(e,t){return ae=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ae(e,t)}function se(e){return se=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},se(e)}var fe=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ae(e,t)}(p,e);var t,n,r,i,f=(r=p,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=se(r);if(i){var n=se(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===ue(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(t=f.call(this,e)).setEventListeners(),t}return t=p,(n=[{key:"getUserInfo",value:function(){return{newName:document.querySelector(".edit__input-name").value,newWork:document.querySelector(".edit__input-about").value}}},{key:"setUserInfo",value:function(){var e=this.getUserInfo(),t=e.newName,n=e.newWork;a.textContent=t,s.textContent=n}},{key:"open",value:function(){le(se(p.prototype),"open",this).call(this),c.value=a.textContent,l.value=s.textContent}},{key:"close",value:function(e){le(se(p.prototype),"close",this).call(this,e)}},{key:"_handleEscClose",value:function(e){le(se(p.prototype),"_handleEscClose",this).call(this,e)}},{key:"renderLoading",value:function(e){le(se(p.prototype),"renderLoading",this).call(this,e)}},{key:"setEventListeners",value:function(){var e=this;le(se(p.prototype),"setEventListeners",this).call(this),o.addEventListener("click",(function(){e.open()})),u.addEventListener("click",(function(t){t.preventDefault(),setTimeout((function(){e.close(t)}),1e3),e.getUserInfo(),e.setUserInfo(),Ce()}))}}])&&ce(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),p}(r);function pe(e){return pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},pe(e)}function ye(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function de(e,t,n){return(t=be(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ve(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,be(r.key),r)}}function be(e){var t=function(e,t){if("object"!==pe(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==pe(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===pe(t)?t:String(t)}var he=function(){function e(t){var n=t.baseUrl,r=t.token;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._token=r}var t,n;return t=e,n=[{key:"_fetch",value:function(e,t){var n="".concat(this._baseUrl).concat(e),r=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ye(Object(n),!0).forEach((function(t){de(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ye(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({headers:{"Content-Type":"application/json",authorization:this._token}},t);return fetch(n,r).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){alert("Falha na solicitação com status ".concat(e.status))}))}},{key:"getUsers",value:function(){return this._fetch("/users/me",{method:"GET"})}},{key:"getCards",value:function(){return this._fetch("/cards",{method:"GET"})}},{key:"createCards",value:function(e){return this._fetch("/cards",{method:"POST",body:JSON.stringify(e)})}},{key:"updateDescriptionPerfil",value:function(e){return this._fetch("/users/me",{method:"PATCH",body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return this._fetch("/cards/".concat(e),{method:"DELETE"})}},{key:"deleteLike",value:function(e){return this._fetch("/cards/likes/".concat(e),{method:"DELETE"})}},{key:"addLike",value:function(e){return this._fetch("/cards/likes/".concat(e),{method:"PUT"})}},{key:"getProfilePicture",value:function(e){return this._fetch("/users/me/avatar",{method:"PATCH",body:JSON.stringify(e)})}}],n&&ve(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),me=new he({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_05",token:"e2bad784-3e1f-478a-b640-635d640e7341"});function _e(){me.getUsers().then((function(e){var t=document.querySelector(".profile__image"),n=document.querySelector(".profile__info-name"),r=document.querySelector(".profile__info-discription");t.src=e.avatar,n.textContent=e.name,r.textContent=e.about}))}setTimeout(Oe,120),_e();var ge=new $((function(e){ge.renderLoading(!0),me.createCards({likes:[],name:w.value,link:k.value,owner:E,createdAt:(new Date).toISOString()}).then((function(e){var t=new U({item:{likes:e.likes,_id:e._id,name:e.name,link:e.link,owner:E},templateSelector:".place",deleteCard:we}).generateCard();document.querySelector(".gallery").appendChild(t)})).finally((function(){setTimeout((function(){ge.renderLoading(!1)}),1e3)}))}),p);function Se(){me.getCards().then((function(e){var t=new M({items:e,render:function(e){var n=new U({item:e,templateSelector:".place",deleteCard:we}).generateCard();t.addItem(n)}},y);t.renderer()}))}function we(e){Te.openConfirmDeleteCard(e)}function ke(e){Te.renderLoading(!0),console.log(e),me.deleteCard(e).then((function(){var t=document.getElementById(e);t&&t.remove()})).finally((function(){setTimeout((function(){Te.renderLoading(!1)}),1e3)}))}function Oe(){var e=E._id;me.getCards().then((function(t){t.forEach((function(t){if(t.likes.length>0&&t.likes.some((function(t){return t._id===e}))){var n=document.getElementById(t._id);n&&n.querySelector(".place__button-like").classList.add("place__button-like_active")}}))}))}function Ee(e){me.deleteLike(e)}function Pe(e){me.addLike(e)}function je(){qe.renderLoading(!0);var e={avatar:document.querySelector(".photograph__input-link").value};me.getProfilePicture(e).finally((function(){setTimeout((function(){qe.renderLoading(!1)}),1e3)}))}function Ce(){var e={name:document.querySelector(".edit__input-name").value,about:document.querySelector(".edit__input-about").value};Le.renderLoading(!0),me.updateDescriptionPerfil(e).finally((function(){setTimeout((function(){Le.renderLoading(!1)}),1e3)}))}Se(),new Z(v);var Le=new fe(i),qe=new B(S),Te=new ie(O);new x(P,i),new x(P,p),new x(P,S)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,